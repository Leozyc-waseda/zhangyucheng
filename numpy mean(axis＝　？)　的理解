
>>X = np.float32(12,32,34,54)
>>print X
[12.32.34.54]
>>print X.mean(axis=0)
33.0
>>print X.mean(axis=1)
Index Error: tuple index out of range
再来一个小例子

>>X=np.array([[1,2],[3,4],[5,6]])
>>print X
[[1 2]
 [3 4]
 [5 6]]
>>print X.mean(axis=0)
[3. 4.]
>>print X.mean(axis=1)
[1.5 3.5 5.5]
>>print np.mean(X,axis=0,keepdims=True)
[[3. 4.]]
>>print np.mean(X,axis=0,keepdims=False)
[3. 4.]
>>print np.mean(X,axis=1,keepdims=True)
[[1.5]
 [3.5]
 [5.5]]
>>print np.mean(X,axis=1,keepdims=False)
[1.5 3.5 5.5]
对于这个例子需要解释：

axis=0表示输出矩阵是1行，也就是求每一列的平均值。(1+3+5)/3=3，(2+4+6)/3=4

axis=1表示输出矩阵是1列, 也就是求每一行的平均值，(1+2)/2=1.5，(3+4)/2=3.5，(5+6)/2=5.5

实际上这个axis=0就是选择shape中第一个元素（即第一维）变为1，axis=1就是选择shape中第二个元素变为1。用shape来看会比较方便。

举个例子：

>>> x = np.array([[1, 2], [4, 5], [7, 8]])
>>> x.shape
(3, 2)
>>> y = np.mean(x, axis=0, keepdims=True)
>>> y.shape
(1, 2)
比如我们输入为batch = [128, 28, 28]，可以理解为batch=128，图片大小为28×28像素，我们相求这128个图片的均值，应该这么写

m = np.mean(batch, axis=0)
也就相当于shape的第0个元素被压缩成了一维度，那么在这里意思就是把128张图片压成了一个，求得是它们在每一个像素点的平均值。

如果不给出axis会是什么情况呢？其实求所有值的均值，例子：

>>print X
[[1 2]
 [3 4]
 [5 6]
]
>>print X.mean()

